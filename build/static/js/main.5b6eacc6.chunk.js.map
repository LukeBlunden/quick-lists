{"version":3,"sources":["components/List/ListItem/ListItem.js","components/UI/DeleteButton/DeleteButton.js","components/List/List.js","components/NewList/NewList.js","components/UI/AddButton/AddButton.js","containers/Lists/Lists.js","App.js","index.js"],"names":["styled","li","props","show","listItem","DeleteButton","button","deleteButton","onClick","clicked","xmlns","viewBox","className","d","ListCard","div","NewItem","form","List","listItems","info","items","map","item","key","text","itemDelete","itemDone","id","complete","dragStart","dragOver","dragEnter","onDrop","title","onSubmit","submit","name","type","onChange","e","changed","value","newItem","autoFocus","time","hidden","listDelete","NewList","TitleInput","newList","AddButton","addButton","ListsContainer","Lists","state","listCounter","lists","draggedList","inputChangeHandler","updateLists","list","target","setState","itemAddHandler","preventDefault","forEach","push","window","localStorage","setItem","JSON","stringify","document","querySelector","focus","itemDoneHandler","updatedLists","updatedItems","itm","itemDeleteHandler","console","log","newListHandler","titleChangeHandler","newListSubmit","newListCounter","listDeleteHandler","filter","children","innerText","droppedOnObject","targetedList","draggedIndex","findIndex","trim","droppedIndex","removedItem","splice","getItem","parse","this","Component","Container","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5b6eacc6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ListItem = styled.li`\r\n  display: grid;\r\n  max-width: 100%;\r\n  grid-template-columns: 4fr 1fr;\r\n  justify-content: space-between;\r\n  background-color: #f7f9fc;\r\n  background-color: ${(props) => (props.show ? `#F7F9FC` : `#FFEFCA`)};\r\n  border-radius: 1rem;\r\n  margin: 1rem auto;\r\n  cursor: pointer;\r\n  text-decoration: ${(props) => (props.show ? `none` : `line-through`)};\r\n\r\n  & label {\r\n    font-size: 1.6rem;\r\n    padding: 1rem;\r\n    cursor: pointer;\r\n    /* width: 100%; */\r\n  }\r\n\r\n  & .text {\r\n    /* max-width: 80%; */\r\n    word-wrap: break-word;\r\n  }\r\n\r\n  & .time {\r\n    border-radius: 0 1rem 1rem 0;\r\n    background-color: rgba(0, 0, 0, 0.01);\r\n    border: none;\r\n    /* width: 20%; */\r\n    text-align: center;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: #f8d57e;\r\n    text-decoration: line-through;\r\n  }\r\n`;\r\n\r\nconst listItem = (props) => {\r\n  return (\r\n    // <ListItem onClick={props.itemDelete} >\r\n    <ListItem\r\n      onClick={props.itemDone}\r\n      show={props.show}\r\n      draggable={\"true\"}\r\n      onDragStart={props.dragStart}\r\n      onDragEnter={props.onDrop}\r\n      onDragOver={props.dragOver}\r\n      onDrop={props.onDrop}\r\n    >\r\n      <label className={\"text\"}>{props.item.text}</label>\r\n      <label className={\"time\"}>{props.item.time}</label>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default listItem;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DeleteButton = styled.button`\r\n  background-color: transparent;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  border: none;\r\n  /* box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1); */\r\n  border-radius: 5rem;\r\n  padding: 0.5rem;\r\n  cursor: pointer;\r\n  margin-top: 1rem;\r\n  outline: none;\r\n\r\n  & svg {\r\n    fill: lightgray;\r\n  }\r\n\r\n  &:hover > svg {\r\n    fill: #00C9B2;\r\n  }\r\n\r\n  /* &:active {\r\n    box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n  } */\r\n`;\r\n\r\nconst deleteButton = (props) => {\r\n  return (\r\n    <DeleteButton onClick={props.clicked}>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n        {/* <style type=\"text/css\">{`.bin{fill:#1E232D;}`}</style> */}\r\n        <path\r\n          className=\"bin\"\r\n          d=\"M18 22H6V8H4v13.7C4 22.8 4.9 24 6 24h12c1.1 0 2-1.2 2-2.3V8h-2V22zM15 4V2H9v2H2v2h20V4H15zM9 10v10h2V10H9zM13 10v10h2V10H13z\"\r\n        />\r\n      </svg>\r\n    </DeleteButton>\r\n  );\r\n};\r\n\r\nexport default deleteButton;\r\n","// package import\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// component imports\r\nimport ListItem from \"./ListItem/ListItem\";\r\nimport DeleteButton from \"../UI/DeleteButton/DeleteButton\";\r\n\r\nconst ListCard = styled.div`\r\n  display: inline-block;\r\n  width: 30rem;\r\n  padding: 3rem;\r\n  background-color: #ffffff;\r\n  border-radius: 2rem;\r\n  margin: 1rem;\r\n\r\n  & h3 {\r\n    font-size: 2.4rem;\r\n    color: #f8d57e;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  & ul {\r\n    list-style: none;\r\n  }\r\n`;\r\n\r\nconst NewItem = styled.form`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  /* background-color: #f7f9fc; */\r\n  border: 0.3rem solid #f7f9fc;\r\n  border-radius: 1rem;\r\n  margin: 1rem auto;\r\n\r\n  & input {\r\n    border: none;\r\n    font-size: 1.6rem;\r\n    padding: 1rem;\r\n    background-color: transparent;\r\n    outline: none;\r\n    width: 75%;\r\n\r\n    &.time {\r\n      padding: 0;\r\n      text-align: center;\r\n      font-size: 1.4rem;\r\n      width: 25%;\r\n      /* background-color: rgba(0, 0, 0, 0.01); */\r\n      border-left: 0.3rem solid #f7f9fc;\r\n    }\r\n  }\r\n`;\r\n\r\nconst List = (props) => {\r\n  let listItems = \"\";\r\n  if (props.info.items != []) {\r\n    listItems = props.info.items.map((item) => (\r\n      <ListItem\r\n        item={item}\r\n        key={item.text}\r\n        itemDelete={() => props.itemDelete(item)}\r\n        itemDone={() => props.itemDone(props.info.id, item)}\r\n        show={!item.complete}\r\n        dragStart={props.dragStart}\r\n        dragOver={props.dragOver}\r\n        dragEnter={props.dragEnter}\r\n        onDrop={props.onDrop}\r\n      />\r\n    ));\r\n  }\r\n\r\n  return (\r\n    <ListCard>\r\n      <h3>{props.info.title}</h3>\r\n      <ul>{listItems}</ul>\r\n      <NewItem onSubmit={props.submit} name={props.info.id}>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => props.changed(props.info.id, e)}\r\n          name={\"text\"}\r\n          value={props.info.newItem.text}\r\n          id={`textInput${props.info.id}`}\r\n          autoFocus\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className={\"time\"}\r\n          onChange={(e) => props.changed(props.info.id, e)}\r\n          name={\"time\"}\r\n          value={props.info.newItem.time}\r\n        />\r\n        <input type=\"submit\" hidden />\r\n      </NewItem>\r\n      <DeleteButton clicked={() => props.listDelete(props.info.id)} />\r\n    </ListCard>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NewList = styled.div`\r\n  display: inline-block;\r\n  width: 30rem;\r\n  padding: 3rem;\r\n  background-color: #ffffff;\r\n  border-radius: 2rem;\r\n  margin: 1rem;\r\n`;\r\n\r\nconst TitleInput = styled.form`\r\n  border: 0.3rem solid #f7f9fc;\r\n  border-radius: 1rem;\r\n  width: 75%;\r\n\r\n  & input {\r\n    border: none;\r\n    font-size: 1.6rem;\r\n    padding: 1rem;\r\n    background-color: transparent;\r\n    outline: none;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst newList = (props) => {\r\n  return (\r\n    <NewList>\r\n      <TitleInput onSubmit={props.submit} >\r\n        <input\r\n          type=\"text\"\r\n          onChange={props.changed}\r\n          name={\"title\"}\r\n          value={props.newList.title}\r\n          autoFocus\r\n        />\r\n        <input type=\"submit\" hidden />\r\n      </TitleInput>\r\n    </NewList>\r\n  );\r\n};\r\n\r\nexport default newList;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst AddButton = styled.button`\r\n  margin-left: -7rem;\r\n  margin-top: 2rem;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-radius: 2rem;\r\n  cursor: pointer;\r\n  font-size: 4rem;\r\n  color: lightgray;\r\n  height: 4rem;\r\n  width: 4rem;\r\n  outline: none;\r\n\r\n  &:hover {\r\n    color: #00c9b2;\r\n  }\r\n`;\r\n\r\nconst addButton = (props) => {\r\n  return <AddButton onClick={props.clicked}>+</AddButton>;\r\n};\r\n\r\nexport default addButton;\r\n","// package imports\r\nimport React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n// Component imports\r\nimport List from \"../../components/List/List\";\r\nimport NewList from \"../../components/NewList/NewList\";\r\nimport AddButton from \"../../components/UI/AddButton/AddButton\";\r\n\r\nconst ListsContainer = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nclass Lists extends Component {\r\n  state = {\r\n    listCounter: 1,\r\n    newList: \"\",\r\n    lists: [\r\n      {\r\n        id: 1,\r\n        title: \"The first list\",\r\n        items: [],\r\n        newItem: { text: \"\", time: \"\", complete: false },\r\n      },\r\n    ],\r\n    // Required for drag preview as we cannot access getData()\r\n    draggedList: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Retrieve local storage data for lists and list counter\r\n    if (window.localStorage.getItem(\"lists\")) {\r\n      const lists = JSON.parse(window.localStorage.getItem(\"lists\"));\r\n      this.setState({ lists: lists });\r\n    }\r\n    if (window.localStorage.getItem(\"listCounter\")) {\r\n      const listCounter = JSON.parse(\r\n        window.localStorage.getItem(\"listCounter\")\r\n      );\r\n      this.setState({ listCounter: listCounter });\r\n    }\r\n  }\r\n\r\n  // Handles input value and state update on list items\r\n  inputChangeHandler = (id, e) => {\r\n    const lists = [...this.state.lists];\r\n    const updateLists = lists.map((list) => {\r\n      if (list.id === id) {\r\n        list.newItem[e.target.name] = e.target.value;\r\n      }\r\n      return list;\r\n    });\r\n    this.setState({ lists: updateLists });\r\n  };\r\n\r\n  // Handles pushing new list items onto their list\r\n  itemAddHandler = (e) => {\r\n    // Prevent form submission\r\n    e.preventDefault();\r\n    // Copy state lists array\r\n    const lists = [...this.state.lists];\r\n    lists.forEach((list) => {\r\n      // Check for matching list\r\n      if (list.id == e.target.name) {\r\n        list.items.push(list.newItem);\r\n        // Reset blank new list item\r\n        list.newItem = { text: \"\", time: \"\", complete: false };\r\n        this.setState({ lists: lists });\r\n        // Update local storafe\r\n        window.localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n      }\r\n      // Set the blank text input to be focuses instead of time input\r\n      document.querySelector(`#textInput${list.id}`).focus();\r\n    });\r\n  };\r\n\r\n  // Sets complete status of items\r\n  itemDoneHandler = (id, item) => {\r\n    const lists = [...this.state.lists];\r\n    const updatedLists = lists.map((list) => {\r\n      //Check for matching list in lists\r\n      if (list.id == id) {\r\n        const updatedItems = list.items.map((itm) => {\r\n          // Check for matching list item\r\n          if (itm === item) {\r\n            // Reverse it's complete status\r\n            itm.complete = !itm.complete;\r\n          }\r\n          return itm;\r\n        });\r\n        list.items = updatedItems;\r\n      }\r\n      return list;\r\n    });\r\n    this.setState({ lists: updatedLists });\r\n    window.localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n  };\r\n\r\n  // WIP\r\n  itemDeleteHandler = (item) => {\r\n    console.log(item);\r\n  };\r\n\r\n  // Populates newList state w/ blanknewList object w/ updated id\r\n  newListHandler = () => {\r\n    const newList = {\r\n      id: this.state.listCounter + 1,\r\n      title: \"\",\r\n      items: [],\r\n      newItem: { text: \"\", time: \"\", complete: false },\r\n    };\r\n    this.setState({ newList: newList });\r\n  };\r\n\r\n  // Handles updating of newList title in state and input value\r\n  titleChangeHandler = (e) => {\r\n    const newList = { ...this.state.newList };\r\n    newList.title = e.target.value;\r\n    this.setState({ newList: newList });\r\n  };\r\n\r\n  // Handles submission of the new list\r\n  newListSubmit = (e) => {\r\n    // Prevent form submission\r\n    e.preventDefault();\r\n    const lists = [...this.state.lists];\r\n    // Push the newList object onto the lists state\r\n    lists.push(this.state.newList);\r\n    // Update list ID counter\r\n    const newListCounter = this.state.listCounter + 1;\r\n    // Reset newList state back to blank, update lists state and counter state\r\n    this.setState({ newList: \"\", lists: lists, listCounter: newListCounter });\r\n    // Update localStorage\r\n    window.localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n    window.localStorage.setItem(\"listCounter\", JSON.stringify(newListCounter));\r\n  };\r\n\r\n  // Handles list deletion\r\n  listDeleteHandler = (id) => {\r\n    const lists = [...this.state.lists];\r\n    // Filter for all lists that are not the deleted list\r\n    const updatedLists = lists.filter((list) => list.id != id);\r\n    // Set list state to this filtered list\r\n    this.setState({ lists: updatedLists });\r\n    // Update localStorage\r\n    window.localStorage.setItem(\"lists\", JSON.stringify(updatedLists));\r\n  };\r\n\r\n  // Initial drag operations\r\n  dragStart = (e) => {\r\n    // Save the text value for indexing\r\n    this.setState({ draggedList: e.target.children[0].innerText });\r\n  };\r\n\r\n  dragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  // Handlers drag preview sorting\r\n  dragEnter = (id, e) => {\r\n    // Gets hovered on object for indexing\r\n    const droppedOnObject = e.target.innerText;\r\n    // Copy of lists state\r\n    const lists = [...this.state.lists];\r\n    // Copy of list to be reordered\r\n    const targetedList = { ...lists.filter((list) => list.id === id) };\r\n    // Find index of dragged element and hovered on element\r\n    const draggedIndex = targetedList[0].items.findIndex(\r\n      (item) => item.text.trim() === this.state.draggedList.trim()\r\n    );\r\n    const droppedIndex = targetedList[0].items.findIndex(\r\n      (item) => item.text.trim() === droppedOnObject.trim()\r\n    );\r\n\r\n    // Copy of list items\r\n    const items = [...targetedList[0].items];\r\n    // Remove and assign item to be moved\r\n    const removedItem = items.splice(draggedIndex, 1);\r\n    // Insert removed item into targeted position\r\n    items.splice(droppedIndex, 0, removedItem[0]);\r\n\r\n    // update lists array with reordered items\r\n    const updatedLists = lists.map((list) => {\r\n      if (list.id === targetedList[0].id) {\r\n        list.items = [...items];\r\n      }\r\n      return list;\r\n    });\r\n    // Update state\r\n    this.setState({ lists: updatedLists });\r\n  };\r\n\r\n  // Same behaviour as above but on drop update the localStorage\r\n  onDrop = (id, e) => {\r\n    e.preventDefault();\r\n    this.dragEnter(id, e);\r\n    window.localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n  };\r\n\r\n  render() {\r\n    const lists = this.state.lists.map((list) => (\r\n      <List\r\n        key={list.id}\r\n        info={list}\r\n        submit={this.itemAddHandler}\r\n        changed={this.inputChangeHandler}\r\n        listDelete={this.listDeleteHandler}\r\n        itemDelete={this.itemDeleteHandler}\r\n        itemDone={this.itemDoneHandler}\r\n        dragStart={this.dragStart}\r\n        dragOver={this.dragOver}\r\n        dragEnter={(e) => this.dragEnter(list.id, e)}\r\n        onDrop={(e) => this.onDrop(list.id, e)}\r\n      />\r\n    ));\r\n\r\n    let newList = null;\r\n    if (this.state.newList) {\r\n      newList = (\r\n        <NewList\r\n          newList={this.state.newList}\r\n          changed={this.titleChangeHandler}\r\n          submit={this.newListSubmit}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <ListsContainer>\r\n        {lists}\r\n        {newList}\r\n        <AddButton clicked={this.newListHandler} />\r\n      </ListsContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lists;\r\n","// Package imports\r\nimport React, { Component } from \"react\";\r\n// import { hot } from \"react-hot-loader\";\r\nimport styled from \"styled-components\";\r\n\r\n// css import\r\nimport \"./App.css\";\r\n\r\n// Component imports\r\nimport Lists from \"./containers/Lists/Lists\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  height: 100vh;\r\n  align-items: center;\r\n  justify-items: center;\r\n  background-color: #E6EBED;\r\n  /* background-color: #3ADDC2; */\r\n`;\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Lists />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n// export default hot(module)(App);\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}